//%inputDir input_table1
//%outputDir output
//%displayMode CSV
//%csvConfig UndesirableEffect frequency class 
//%writescript ./UndesirableEffect.ruta
//%saveTypeSystem ./UndesirableEffectTypeSystem.xml
//%saveTypeSystem ./../../../TypeSystem.xml
// we want to use the DefaultSeeder for MARKUP annoations
//%configParams --seeders=org.apache.uima.ruta.seed.DefaultSeeder
//%configParams --debug=true --debugWithMatches=true --createdBy=true --profile=true --statistics=true

TYPESYSTEM org.apache.uima.ruta.engine.HtmlTypeSystem;
UIMAFIT org.apache.uima.ruta.engine.HtmlAnnotator;

EXEC(HtmlAnnotator, {TAG});
RETAINTYPE(WS, MARKUP);
TAG{-> TRIM(WS, MARKUP)};
RETAINTYPE;

DECLARE UndesirableEffect (Annotation class, Annotation effect, Annotation frequency);
ACTION UE(ANNOTATION class, ANNOTATION effect, ANNOTATION frequency) = 
    CREATE(UndesirableEffect, "class"= class, "effect" = effect, "frequency" = frequency) ;

DECLARE FrequencyInd;
WORDLIST FrequencyList = 'Frequencies.txt';
MARKFAST(FrequencyInd, FrequencyList, true);
FrequencyInd->{ANY f:FrequencyInd{-> UNMARK(f)};};

INT index;
DECLARE Cell(INT column);
DECLARE FirstRow, FirstColumn, FrequencyCell;
TR{STARTSWITH(TABLE)-> FirstRow};
TD{STARTSWITH(TR)-> FirstColumn};
TD{CONTAINS(FrequencyInd)-> FrequencyCell};
TR{->index=0}->{
    TD{->index = index+1, CREATE(Cell,"column"=index)};
};

DECLARE Chunk;
TD{-CONTAINS(FrequencyInd), -PARTOF(FirstColumn), -REGEXP("-") -> Chunk};
Chunk{CONTAINS(COMMA)-> SPLIT(COMMA)};

DECLARE Header;
"System organ class"-> Header;

c:TD{PARTOF(FirstColumn),-PARTOF(Header), -PARTOF(FrequencyCell)};
f:FrequencyCell;
e:@Chunk;

c:TD{PARTOF(FirstColumn),-PARTOF(Header), -PARTOF(FrequencyCell)} 
    # f:FrequencyCell 
    # e:@Chunk{-PARTOF(UndesirableEffect) -> UE(c,e,f)};

// a rule for format 2
fc:Cell{PARTOF(FirstRow),PARTOF(FrequencyCell),fc.column==c.column}
    # cc:Cell{PARTOF(FirstColumn), -PARTOF(FrequencyCell)}
    # c:@Cell{CONTAINS(Chunk),-PARTOF(UndesirableEffect)}
    ->{e:@Chunk{-PARTOF(UndesirableEffect)-> UE(cc,e,fc)};};
